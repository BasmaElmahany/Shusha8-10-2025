@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ms-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-person-circle"></i> @User.Identity?.Name
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                @if (User.IsInRole("Admin")){
                    <li>
                        <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">
                            <i class="bi bi-gear"></i> اعدادات الحساب
                        </a>
                    </li>
                }
               
                <li>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="d-inline">
                        <button type="submit" class="dropdown-item">
                            <i class="bi bi-box-arrow-right"></i> تسجيل الخروج
                        </button>
                    </form>
                </li>
            </ul>
        </li>

        <!-- Display the "تسجيل" button only for admin -->
        @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">
                    <i class="bi bi-person-plus"></i> تسجيل
                </a>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">
                <i class="bi bi-box-arrow-in-right"></i> تسجيل دخول
            </a>
        </li>
    }
</ul>
