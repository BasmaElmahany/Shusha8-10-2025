// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shusha_project_BackUp;

#nullable disable

namespace Shusha_project_BackUp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250122082831_edit_feed_dis")]
    partial class edit_feed_dis
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Shusha_project_BackUp.Branch", b =>
                {
                    b.Property<int>("branch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branch_id"));

                    b.Property<string>("branch_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("branch_id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Center", b =>
                {
                    b.Property<int>("centerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("centerId"));

                    b.Property<string>("centerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("centerId");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Contract", b =>
                {
                    b.Property<int>("contract_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contract_id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Gross_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Incentives")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Medical_Assurance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("contract_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emp_id")
                        .HasColumnType("int");

                    b.Property<decimal>("taxes")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("contract_id");

                    b.HasIndex("emp_id")
                        .IsUnique();

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Shusha_project_BackUp.DailySales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Brdead_herd")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("No_of_Breggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("No_of_Wheggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Whdead_herd")
                        .HasColumnType("int");

                    b.Property<decimal>("double_eggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("no_of_carton_broken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ward_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ward_id");

                    b.ToTable("Daily_Productions");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Daily_Distribution", b =>
                {
                    b.Property<int>("dis_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dis_id"));

                    b.Property<decimal>("BrokenEgg_platesnumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WhEgg_platesnumber")
                        .HasColumnType("int");

                    b.Property<int>("brEgg_platesnumber")
                        .HasColumnType("int");

                    b.Property<int>("centerId")
                        .HasColumnType("int");

                    b.Property<decimal>("doubleEgg_platesnumber")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("dis_id");

                    b.HasIndex("centerId");

                    b.ToTable("Daily_Distributions");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.DailySales", b =>
                {
                    b.Property<int>("dailySales_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dailySales_id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("double_eggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("no_of_carton_BrEggs")
                        .HasColumnType("int");

                    b.Property<int>("no_of_carton_WhEggs")
                        .HasColumnType("int");

                    b.Property<decimal>("no_of_carton_broken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("wardID")
                        .HasColumnType("int");

                    b.Property<decimal?>("waste_poultry")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("dailySales_id");

                    b.HasIndex("wardID");

                    b.ToTable("DailySales");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Egg_stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("brokenPlates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("doubleEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("plates_BrownEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("plates_whiteEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Egg_stock");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.FeedInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tons_qty")
                        .HasColumnType("int");

                    b.Property<decimal>("ton_cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("feedInventories");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.FeedPurchases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tons_qty")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("FeedPurchases");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Feed_Usage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("feed_Usages");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Medicine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProductionDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("medicines");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.MedicineUsed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicineID")
                        .HasColumnType("int");

                    b.Property<int>("WardID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantityUsed")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("MedicineID");

                    b.HasIndex("WardID");

                    b.ToTable("medicineUsed");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Medicine_Pruchase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MedicineID")
                        .HasColumnType("int");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("MedicineID");

                    b.ToTable("Medicine_Pruchase");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Prices", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("broken_Egg_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("brown_Egg_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("double_Egg_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("white_Egg_Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Proceed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("centerId")
                        .HasColumnType("int");

                    b.Property<decimal>("rest_amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("centerId");

                    b.ToTable("Proceeds");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Request_Proceeds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("centerID")
                        .HasColumnType("int");

                    b.Property<decimal>("requested_proceeds")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("centerID");

                    b.ToTable("Request_Proceeds");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.WardsStock", b =>
                {
                    b.Property<int>("stockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stockID"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("brokenEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("brownEggs")
                        .HasColumnType("int");

                    b.Property<decimal>("doubleEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rest_bkEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("rest_brEggs")
                        .HasColumnType("int");

                    b.Property<decimal>("rest_dbEggs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("rest_whEggs")
                        .HasColumnType("int");

                    b.Property<int>("wardID")
                        .HasColumnType("int");

                    b.Property<int>("whiteEggs")
                        .HasColumnType("int");

                    b.HasKey("stockID");

                    b.HasIndex("wardID");

                    b.ToTable("wardsStocks");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Water_Invoices", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invoice_photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Water_Invoices");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Eelectricity_Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invoice_photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Electricity_Invoices");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Employees", b =>
                {
                    b.Property<int>("emp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("emp_id"));

                    b.Property<string>("NID")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("emp_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Feeds_distribution", b =>
                {
                    b.Property<int>("dis_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dis_Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("WardID")
                        .HasColumnType("int");

                    b.Property<decimal>("no_of_tones")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("dis_Id");

                    b.HasIndex("WardID");

                    b.ToTable("Feeds_Distributions");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Inventory", b =>
                {
                    b.Property<int>("Inv_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inv_Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Feeds")
                        .HasColumnType("float");

                    b.Property<double>("Hens_waste")
                        .HasColumnType("float");

                    b.Property<int>("No_of_Breggs")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Brokeneggs")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Double_eggs")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Wheggs")
                        .HasColumnType("int");

                    b.HasKey("Inv_Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Solar_Invoices", b =>
                {
                    b.Property<int>("invoice_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("invoice_id"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("invoice_id");

                    b.HasIndex("BranchID");

                    b.ToTable("Solar_Invoices");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Ward", b =>
                {
                    b.Property<int>("Ward_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ward_ID"));

                    b.Property<int>("BrAge")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("No_of_Brherd")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Whherd")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WhAge")
                        .HasColumnType("int");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.HasKey("Ward_ID");

                    b.HasIndex("branchId");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Shusha_project_BackUp.sales", b =>
                {
                    b.Property<int>("sales_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sales_ID"));

                    b.Property<decimal>("Egg_Carton")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Hens_waste")
                        .HasColumnType("float");

                    b.Property<decimal>("hen_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("no_ofEggs")
                        .HasColumnType("int");

                    b.Property<int>("no_of_hens")
                        .HasColumnType("int");

                    b.Property<decimal>("waste_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("sales_ID");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shusha_project_BackUp.Contract", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Employees", "employees")
                        .WithOne("contract")
                        .HasForeignKey("Shusha_project_BackUp.Contract", "emp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employees");
                });

            modelBuilder.Entity("Shusha_project_BackUp.DailySales", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Ward", "ward")
                        .WithMany()
                        .HasForeignKey("ward_id");

                    b.Navigation("ward");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Daily_Distribution", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Center", "Center")
                        .WithMany()
                        .HasForeignKey("centerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.DailySales", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Ward", "ward")
                        .WithMany()
                        .HasForeignKey("wardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ward");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.MedicineUsed", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Data.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shusha_project_BackUp.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Medicine_Pruchase", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Data.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Proceed", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Center", "center")
                        .WithMany()
                        .HasForeignKey("centerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("center");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Request_Proceeds", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Center", "center")
                        .WithMany()
                        .HasForeignKey("centerID");

                    b.Navigation("center");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.WardsStock", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Ward", "ward")
                        .WithMany()
                        .HasForeignKey("wardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ward");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Data.Water_Invoices", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Eelectricity_Invoice", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Feeds_distribution", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Ward", "ward")
                        .WithMany()
                        .HasForeignKey("WardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ward");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Solar_Invoices", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Ward", b =>
                {
                    b.HasOne("Shusha_project_BackUp.Branch", "branch")
                        .WithMany("wards")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Branch", b =>
                {
                    b.Navigation("wards");
                });

            modelBuilder.Entity("Shusha_project_BackUp.Employees", b =>
                {
                    b.Navigation("contract");
                });
#pragma warning restore 612, 618
        }
    }
}
